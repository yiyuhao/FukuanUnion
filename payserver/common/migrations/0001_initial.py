# Generated by Django 2.0.4 on 2018-06-14 18:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=128)),
                ('bank_card_number', models.CharField(db_index=True, max_length=128)),
                ('bank_account_name', models.CharField(max_length=128)),
                ('balance', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('withdrawable_balance', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openid', models.CharField(max_length=128, unique=True)),
                ('openid_channel', models.IntegerField(verbose_name=((0, 'WECHAT'), (1, 'ALIPAY')))),
                ('phone', models.CharField(max_length=32, null=True)),
                ('status', models.IntegerField(default=0, verbose_name=((0, 'USING'), (1, 'DISABLED')))),
                ('avatar_url', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('min_charge', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('status', models.IntegerField(choices=[(0, 'NOT_USED'), (1, 'USED'), (2, 'EXPIRED')])),
                ('obtain_datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('use_datetime', models.DateTimeField(db_index=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Client')),
            ],
        ),
        migrations.CreateModel(
            name='CouponRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('min_charge', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('valid_strategy', models.IntegerField(choices=[(0, 'DATE_RANGE'), (1, 'EXPIRATION')])),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('expiration_days', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('stock', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('photo_url', models.CharField(max_length=1024, null=True)),
                ('note', models.CharField(max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoginStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_success_login', models.DateTimeField(null=True)),
                ('last_success_ip', models.GenericIPAddressField(null=True)),
                ('last_failed_login', models.DateTimeField(null=True)),
                ('last_failed_ip', models.GenericIPAddressField(null=True)),
                ('failed_login_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Marketer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wechat_openid', models.CharField(max_length=128, unique=True)),
                ('inviter_type', models.IntegerField(verbose_name=((0, 'MARKETER'), (1, 'SALESMAN')))),
                ('status', models.IntegerField(choices=[(0, 'USING'), (1, 'DISABLED')])),
                ('name', models.CharField(max_length=128)),
                ('worker_number', models.CharField(max_length=128, null=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='common.Account')),
                ('login_stats', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='common.LoginStats')),
                ('working_areas', models.ManyToManyField(to='common.Area')),
            ],
        ),
        migrations.CreateModel(
            name='Merchant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'REVIEWING'), (1, 'USING'), (2, 'REJECTED'), (3, 'DISABLED')])),
                ('name', models.CharField(max_length=128)),
                ('contact_phone', models.CharField(max_length=32)),
                ('address', models.CharField(max_length=512)),
                ('location_lon', models.FloatField()),
                ('location_lat', models.FloatField()),
                ('description', models.TextField()),
                ('avatar_url', models.CharField(max_length=1024)),
                ('photo_url', models.CharField(max_length=1024)),
                ('license_url', models.CharField(max_length=1024)),
                ('id_card_front_url', models.CharField(max_length=1024)),
                ('id_card_back_url', models.CharField(max_length=1024)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='common.Account')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.Area')),
                ('auditors', models.ManyToManyField(related_name='audited_merchants', to='common.Marketer')),
            ],
        ),
        migrations.CreateModel(
            name='MerchantAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wechat_openid', models.CharField(max_length=128, unique=True)),
                ('merchant_admin_type', models.IntegerField(verbose_name=((0, 'ADMIN'), (1, 'CASHIER')))),
                ('status', models.IntegerField(verbose_name=((0, 'USING'), (1, 'DISABLED')))),
                ('login_stats', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='common.LoginStats')),
                ('work_merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admins', to='common.Merchant')),
            ],
        ),
        migrations.CreateModel(
            name='MerchantCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='common.MerchantCategory')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('serial_number', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('pay_channel', models.IntegerField(verbose_name=((0, 'WECHAT'), (1, 'ALIPAY')))),
                ('status', models.IntegerField(choices=[(0, 'FROZEN'), (1, 'REFUND'), (2, 'FINISHED')])),
                ('order_price', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('platform_share', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('inviter_share', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('originator_share', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('note', models.TextField(null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.Client')),
                ('coupon', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='common.Coupon')),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.Merchant')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentQRCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='SystemAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=128, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=128)),
                ('status', models.IntegerField(verbose_name=((0, 'USING'), (1, 'DISABLED')))),
                ('is_super', models.BooleanField(default=False)),
                ('permissions', models.CharField(max_length=2048)),
                ('login_stats', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='common.LoginStats')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('serial_number', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('transaction_type', models.IntegerField(verbose_name=((0, 'MERCHANT_RECEIVE'), (1, 'MERCHANT_REFUND'), (2, 'MERCHANT_WITHDRAW'), (3, 'MERCHANT_SHARE'), (4, 'MERCHANT_SHARE_REFUND'), (5, 'MARKETER_SHARE'), (6, 'MARKETER_SHARE_REFUND'), (7, 'MARKETER_WITHDRAW'), (8, 'PLATFORM_SHARE'), (9, 'PLATFORM_SHARE_REFUND')))),
                ('datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('amount', models.DecimalField(decimal_places=6, max_digits=10)),
                ('balance_after_transaction', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.Account')),
            ],
        ),
        migrations.CreateModel(
            name='Withdraw',
            fields=[
                ('serial_number', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.IntegerField(choices=[(0, 'PROCESSING'), (1, 'FAILED'), (2, 'FINISHED')])),
                ('amount', models.DecimalField(decimal_places=6, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.Account')),
            ],
        ),
        migrations.AddField(
            model_name='merchant',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.MerchantCategory'),
        ),
        migrations.AddField(
            model_name='merchant',
            name='inviter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invited_merchants', to='common.Marketer'),
        ),
        migrations.AddField(
            model_name='merchant',
            name='payment_qr_code',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='common.PaymentQRCode'),
        ),
        migrations.AddField(
            model_name='couponrule',
            name='merchant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.Merchant'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='originator_merchant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.Merchant'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='rule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.CouponRule'),
        ),
        migrations.AddField(
            model_name='client',
            name='login_stats',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='common.LoginStats'),
        ),
        migrations.AddField(
            model_name='area',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas', to='common.City'),
        ),
        migrations.AddField(
            model_name='area',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='common.Area'),
        ),
    ]
